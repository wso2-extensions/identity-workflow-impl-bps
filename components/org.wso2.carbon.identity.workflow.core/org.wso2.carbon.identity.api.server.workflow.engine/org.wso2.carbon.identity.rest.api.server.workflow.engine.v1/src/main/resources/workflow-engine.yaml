openapi: 3.0.0
info:
  title: WorkFlow Engine
  description: This is the RESTful API for managing WorkFlow Engines in WSO2 Identity
    Server
  contact:
    name: WSO2 Identity Server
    url: https://wso2.com/identity-and-access-management/
    email: architecture@wso2.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: v1
servers:
  - url: "https://localhost:9443/t/{tenant-domain}/api/server/v1"
security:
  - OAuth2: []
  - BasicAuth: []
tags:
  - name: default
    description: Secured Admin-only calls
paths:
  /workflow-engines:
    get:
      summary: Retrieve all the available workflow engines.
      description: |
        Retrieve metadata information of all the workflow engines in the system.

          <b>Permission required:</b>
            * /permission/admin/manage/humantask/viewtasks
      operationId: searchWorkFlowEngines
      responses:
        "200":
          description: search results matching criteria
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkflowEngine'
        '400':
          $ref: '#/components/responses/InvalidInput'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /workflows:
    get:
      summary: Retrieve all the available workflows.
      description: |
        Retrieve all the available workflows in the system.
        
        <b>Permission required:</b>
              * /permission/admin/manage/humantask/viewtasks
      operationId: listWorkflows
      parameters:
        - $ref: '#/components/parameters/limitQueryParam'
        - $ref: '#/components/parameters/offsetQueryParam'
        - $ref: '#/components/parameters/filterQueryParam'
      responses:
        "200":
          description: Array of workflows
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkflowSummary'
              example:
                - id: "100"
                  workflowName: User Registration Approval
                  workflowDescription: Approves new user registrations before account
                    activation
                  workflowTemplate: MultiStepApprovalTemplate
                  deployment: ApprovalWorkflow
                - id: "101"
                  workflowName: Role Change Request
                  workflowDescription: Approves requests for changing user roles
                  workflowTemplate: MultiStepApprovalTemplate
                  deployment: ApprovalWorkflow
                - id: "102"
                  workflowName: User Deactivation Workflow
                  workflowDescription: Ensures proper approvals before deactivating
                    a user account
                  workflowTemplate: SingleStepApprovalTemplate
                  deployment: ApprovalWorkflow
        '400':
          $ref: '#/components/responses/InvalidInput'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      summary: Create a new workflow.
      description: |
        Create a new workflow using the specified workflow template and execution engine.

          <b>Permission required:</b>
            * /permission/admin/manage/humantask/viewtasks
      operationId: createWorkflow
      requestBody:
        description: Contains the details of the newly created workflow.
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/WorkflowCreation'
        required: true
      responses:
        "201":
          description: Item Created
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/WorkflowSummary'
              example:
                id: "100"
                workflowName: User Registration Approval
                workflowDescription: Approves new user registrations before account
                  activation
                workflowTemplate: MultiStepApprovalTemplate
                deployment: ApprovalWorkflow
        '400':
          $ref: '#/components/responses/InvalidInput'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/ServerError'
      x-codegen-request-body-name: Request Body
  /workflows/{workflow-id}:
    get:
      summary: Retrieve the workflow by workflow id.
      description: "Retrieve information about a specific workflow identified by the\
        \ workflow id.\n  \n  <b>Permission required:</b>\n    * /permission/admin/manage/humantask/viewtasks\n"
      operationId: getWorkflowById
      parameters:
        - $ref: '#/components/parameters/workflowIdPathParam'
      responses:
        "200":
          description: Information about the workflow identified by the workflow-id.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/DetailedWorkflow'
              example:
                id: "100"
                workflowName: User Registration Approval
                workflowDescription: Approves new user registrations before account
                  activation
                workflowTemplate:
                  name: MultiStepApproval
                  templateDescription: "The operation should be approved by an authorized\
                    \ person with given role, to complete."
                  properties:
                    - paramName: UserAndRole
                      paramValue: Internal/admin
                      qName: UserAndRoles-step-1-roles
                    - paramName: UserAndRole
                      paramValue: John
                      qName: UserAndRoles-step-1-users
                    - paramName: UserAndRole
                      paramValue: ""
                      qName: UserAndRoles-step-2-roles
                    - paramName: UserAndRole
                      paramValue: "John,Tom"
                      qName: UserAndRoles-step-2-users
                workflowEngine: Simple Workflow Engine
                ApprovalTask: Sample Approval Task
                ApprovalTaskDescription: This is an approval task
        '400':
          $ref: '#/components/responses/InvalidInput'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    put:
      summary: Update an existing workflow.
      description: |
        Update a workflow identified by workflow-id.

          <b>Permission required:</b>
            * /permission/admin/manage/humantask/viewtasks
      operationId: updateWorkflow
      parameters:
        - $ref: '#/components/parameters/workflowIdPathParam'
      requestBody:
        description: Contains the details of the updated workflow.
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/WorkflowCreation'
        required: false
      responses:
        '200':
          $ref: '#/components/responses/Updated'
        '400':
          $ref: '#/components/responses/InvalidInput'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      x-codegen-request-body-name: Request Body
    delete:
      summary: Delete the workflow by workflow-id.
      description: "Delete a specific workflow identified by the workflow-id.\n  \n\
        \  <b>Permission required:</b>\n    * /permission/admin/manage/humantask/viewtasks\n"
      operationId: deleteWorkflowById
      parameters:
        - $ref: '#/components/parameters/workflowIdPathParam'
      responses:
        '204':
          $ref: '#/components/responses/Deleted'
        '400':
          $ref: '#/components/responses/InvalidInput'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /workflow-associations:
    get:
      summary: Retrieve all the available workflow associations.
      description: "Retrieve all the available workflow associations in the system.\n\
        \  \n  <b>Permission required:</b>\n    * /permission/admin/manage/humantask/viewtasks\n"
      operationId: listWorkflowAssociations
      parameters:
        - $ref: '#/components/parameters/limitQueryParam'
        - $ref: '#/components/parameters/offsetQueryParam'
        - $ref: '#/components/parameters/filterQueryParam'
      responses:
        "200":
          description: Array of workflow associations matching the search criteria
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkflowAssociation'
              example:
                - id: "500"
                  workflowAssociationName: User Registration Workflow Association
                  operation: Add User
                  workflowName: User Registration Approval
                  associationCondition: "true"
                  isEnabled: "true"
                - id: "501"
                  workflowAssociationName: Role Update Workflow Association
                  operation: Update Role
                  workflowName: Role Change Request
                  associationCondition: "false"
                  isEnabled: "true"
                - id: "502"
                  workflowAssociationName: Delete User Workflow Association
                  operation: Delete User
                  workflowName: User Deactivation Workflow
                  associationCondition: "false"
                  isEnabled: "false"
        '400':
          $ref: '#/components/responses/InvalidInput'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    post:
      summary: Create a new workflow association.
      description: |
        Create a new workflow association by assigning a user operation to an existing workflow.

          <b>Permission required:</b>
            * /permission/admin/manage/humantask/viewtasks
      operationId: createWorkflowAssociation
      requestBody:
        description: Contains the details of the newly created workflow association.
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/WorkflowAssociationCreation'
        required: true
      responses:
        "201":
          description: Item Created
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/WorkflowAssociation'
        '400':
          $ref: '#/components/responses/InvalidInput'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/ServerError'
      x-codegen-request-body-name: Request Body
  /workflow-associations/{association-id}:
    delete:
      summary: Delete the workflow association by association id.
      description: "Delete a specific workflow association identified by the association\
        \ id.\n  \n  <b>Permission required:</b>\n    * /permission/admin/manage/humantask/viewtasks\n"
      operationId: deleteWorkflowAssociationById
      parameters:
        - $ref: '#/components/parameters/associationIdPathParam'
      responses:
        '204':
          $ref: '#/components/responses/Deleted'
        '400':
          $ref: '#/components/responses/InvalidInput'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
  /workflow-associations/{association-id}/status:
    put:
      summary: Update the status of a workflow association.
      description: |
        Enable or disable a specific workflow association.

          <b>Permission required:</b>
            * /permission/admin/manage/humantask/viewtasks
      operationId: updateWorkflowAssociationStatus
      parameters:
        - $ref: '#/components/parameters/associationIdPathParam'
      requestBody:
        description: Status of the workflow association (enable/disable)
        content:
          'application/json':
            schema:
              $ref: "#/components/schemas/Status"
        required: false
      responses:
        '200':
          $ref: '#/components/responses/Updated'
        '400':
          $ref: '#/components/responses/InvalidInput'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
      x-codegen-request-body-name: status
components:
  schemas:
    WorkflowEngine:
      type: object
      required:
        - profileName
      properties:
        profileName:
          type: string
          example: embedded_bps
          description: A unique name for the workflow engine.
        workerHostURL:
          type: string
          example: https://localhost:9443/services
          description: URL of the workflow worker node.
        managerHostURL:
          type: string
          example: https://localhost:9443/services
          description: URL of the workflow manager node.
        userName:
          type: string
          example: challengeQuestion1
          description: Username of the creator of the workflow engine.

    WorkflowTemplateParameters:
      type: object
      properties:
        paramName:
          type: string
          example: "UserAndRole"
        paramValue:
          type: string
          example: "Internal/admin"
        qName:
          type: string
          example: "UserAndRoles-step-1-roles"
      required: ["paramName", "paramValue", "qName"]

    WorkflowSummary:
      type: object
      properties:
        id:
          type: string
          example: 100
          description: "Unique id to represent a workflow"
        workflowName:
          type: string
          example: "User Role Approval"
          description: "Display name of the workflow"
        workflowDescription:
          type: string
          example: "Workflow to approve new user registrations before account activation"
          description: "Detailed description of the workflow"
        workflowTemplate:
          type: string
          example: "MultiStepApprovalTemplate"
          description: "Template defining the approval process for the workflow"
        deployment:
          type: string
          example: "ApprovalWorkflow"
          description: "Category in which the workflow is deployed"

    DetailedWorkflow:
      type: object
      required:
        - workflowName
        - workflowEngine
        - ApprovalTask
      properties:
        workflowName:
          type: string
          example: "User Registration Workflow"
          description: "Name of the created workflow"
        workflowDescription:
          type: string
          example: "Workflow to approve new user registrations before account activation"
          description: "Description of the created workflow"
        workflowTemplate:
          $ref: "#/components/schemas/DetailedWorkflowTemplate"
        workflowEngine:
          type: string
          example: "Simple Workflow Engine"
          description: "Name of the selected workflow engine"
        ApprovalTask:
          type: string
          example: "User Registration Approval"
          description: "Approval task subject to display"
        ApprovalTaskDescription:
          type: string
          example: "Approval task to validate and approve new user registrations before account activation"
          description: "Description of the approval task"


    DetailedWorkflowTemplate:
      type: object
      properties:
        name:
          type: string
          example: "MultiStepApproval"
          description: "Name of the workflow template"
        templateDescription:
          type: string
          example: "The operation should be approved by an authorized person with given role, to complete."
          description: "Description of the workflow template"
        properties:
          type: array
          items:
            $ref: "#/components/schemas/WorkflowTemplateParameters"
          required:
            - name


    WorkflowAssociation:
      type: object
      properties:
        id:
          type: string
          example: "500"
          description: "Unique id to represent a workflow association"
        workflowAssociationName:
          type: string
          example: "User registration Workflow Association"
          description: "Name of the workflow association"
        operation:
          type: string
          example: "Add User"
          description: "User Operation"
        workflowName:
          type: string
          example: "User Registration Approval"
          description: "Assigned Workflow"
        isEnabled:
          type: boolean
          example: true
          description: "Association Status"

    WorkflowCreation:
      type: object
      required:
        - workflowName
        - workflowTemplate
        - workflowEngine
        - ApprovalTask
      properties:
        workflowName:
          type: string
          example: "User Registration Workflow"
          description: "Name of the created workflow"
        workflowDescription:
          type: string
          example: "Workflow to approve new user registrations before account activation"
          description: "Description of the created workflow"
        workflowTemplate:
          $ref: "#/components/schemas/WorkflowTemplate"
        workflowEngine:
          type: string
          example: "Simple Workflow Engine"
          description: "Name of the selected workflow engine"
        ApprovalTask:
          type: string
          example: "User Registration Approval"
          description: "Approval task subject to display"
        ApprovalTaskDescription:
          type: string
          example: "Approval task to validate and approve new user registrations before account activation"
          description: "Description of the approval task"

    WorkflowTemplate:
      type: object
      properties:
        name:
          type: string
          example: "MultiStepApproval"
          description: "Name of the workflow template"
        properties:
          type: array
          minItems: 2
          items:
            $ref: "#/components/schemas/WorkflowTemplateParameters"


    WorkflowAssociationCreation:
      type: object
      required:
        - associationName
        - operationCategory
        - operationName
        - workflowId
      properties:
        associationName:
          type: string
          example: "User Registration Workflow Association"
          description: "Name of the workflow association"
        operationCategory:
          type: string
          example: "User Store Operations"
          description: "Operation type"
        operationName:
          type: string
          example: "Add User"
          description: "Name of the user operation"
        workflowId:
          type: string
          example: "456"
          description: "Id of the assigned workflow"
        associationCondition:
          type: string
          example: "Role Name equals Manager"
          description: "Condition added to the association"

    Status:
      type: object
      properties:
        action:
          $ref: "#/components/schemas/ActionStatus"

    ActionStatus:
      type: string
      enum:
        - ENABLE
        - DISABLE
      description: "Indicates whether to enable or disable the workflow association"

    Error:
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: string
          example: some_error_code
        message:
          type: string
          example: Some Error Message
        description:
          type: string
          example: Some Error Description
        traceId:
          type: string
          example: Some Trace ID
  responses:
    NotFound:
      description: The specified resource is not found
      content:
        'application/json':
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
    Forbidden:
      description: Forbidden
    ServerError:
      description: Internal Server Error
      content:
        'application/json':
          schema:
            $ref: '#/components/schemas/Error'
    InvalidInput:
      description: Invalid input request
      content:
        'application/json':
          schema:
            $ref: '#/components/schemas/Error'
    Conflict:
      description: Item Already Exists
      content:
        'application/json':
          schema:
            $ref: '#/components/schemas/Error'
    Deleted:
      description: Item Deleted
    Updated:
      description: Item Updated
  parameters:
    workflowIdPathParam:
      name: workflow-id
      in: path
      description: Workflow ID
      required: true
      schema:
        type: string
    associationIdPathParam:
      name: association-id
      in: path
      description: Workflow Association ID
      required: true
      schema:
        type: integer
        format: int32
    offsetQueryParam:
      name: offset
      in: query
      description: Number of records to skip for pagination
      schema:
        minimum: 0
        type: integer
        format: int32
    limitQueryParam:
      name: limit
      in: query
      description: Maximum number of records to return
      schema:
        minimum: 15
        type: integer
        format: int32
    filterQueryParam:
      name: filter
      in: query
      description: "Records, filtered by their name"
      schema:
        type: string
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://localhost:9443/oauth2/authorize
          tokenUrl: https://localhost:9443/oauth2/token
          scopes: {}
x-original-swagger-version: "2.0"
